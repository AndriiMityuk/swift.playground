// function

// #1 —Å—Ç–≤–æ—Ä–∏—Ç–∏ –¥–µ–∫—ñ–ª—å–∫–∞ —Ñ—É–Ω–∫—Ü—ñ–π, —è–∫—ñ –±—É–¥—É—Ç—å –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ —Å—Ç—Ä–æ–∫—É –∑ —Å–∏–≤–æ–ª–æ–º —é–Ω—ñ–∫–æ–¥—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥"‚ô•Ô∏è")
//  —Å—Ç–≤–æ—Ä–∏—Ç–∏ –æ–¥–∏–Ω print("") —ñ–∑ —Ñ—É–Ω–∫—Ü—ñ–π —ñ —Å–ª—ñ–≤ –≤–∏–π—à–ª–æ –≥—Ä–∞—Ñ—ñ—á–Ω–µ —Ä–µ—á–µ–Ω–Ω—è

func dog() -> String { return "üê∂" }
func cat() -> String { return "üê±"}
func fox() -> String { return "ü¶ä"}
func panda() -> String { return "üêº"}
print("\( dog() ) and \( cat() ) lives at home and \( fox() ) and \(panda() ) lives in forest!")

// #2 —à–∞—Ö–∏. —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é,—è–∫–∞ –ø—Ä–∏–π–º–∞—Ç–∏–º–µ 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É –∫–ª—ñ—Ç–∏–Ω–∫–∏
//    –∑–Ω–∞—á–µ–Ω–Ω—è –≤—Å—Ç–∞–≤–∏—Ç–∏ –≤ –∑–º—ñ–Ω–Ω—É —ñ —á–µ—Ä–µ–∑ —Ü—é –∑–º—ñ–Ω–Ω—É –Ω–∞–¥—Ä—É–∫—É–≤–∞—Ç–∏


func colorOfCell(letter: String, int: Int) -> String {
    var letterInInt = 1
    var letters = ["a","b","c","d","e","f","g","h"]
    // –ø—Ä–∏—Å–≤–æ—î–Ω–Ω—è –±—É–∫–≤–∞–º —Ü–∏—Ñ—Ä–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è
    for a in letters {
        if a == letter {
            break
        } else {
            letterInInt += 1
        }
    }
    // –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∫–æ–ª—å–æ—Ä—É –∫–ª—ñ—Ç–∏–Ω–∫–∏ –∑–∞ —É–º–æ–≤–æ—é: —Å—É–º–∞ –∑–Ω–∞—á–µ–Ω—å –ø–∞—Ä–Ω–∞ —á–∏ –Ω—ñ. –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —á–µ—Ä–µ–∑ –æ—Å—Ç–∞—á—É "%"
    if (letterInInt + int) % 2 == 0 {
        return "black‚óºÔ∏è"
    }
        return "white‚óªÔ∏è"
}
var cellColor = colorOfCell
print(cellColor("a",8))



